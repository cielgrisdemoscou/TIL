(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{452:function(t,s,e){"use strict";e.r(s);var a=e(42),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"basics-of-unit-testing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basics-of-unit-testing"}},[t._v("#")]),t._v(" Basics of Unit Testing")]),t._v(" "),e("p",[t._v("A Unit test is very small function that you write to test some part of your code.(Unit tests are automated tests that run and validate a piece of code (known as the “unit”) to make sure it behaves as intended and meets its design.)")]),t._v(" "),e("p",[t._v("Unit tests have their own target in Xcode and are written using the XCTest framework. A subclass of XCTestCase contains test methods to run in which only the methods starting with “test” will be parsed by Xcode and available to run.")]),t._v(" "),e("p",[t._v("Unit Test - Testing isolated small pieces of code with Fake or Mock dependencies")]),t._v(" "),e("p",[t._v("Integration Test - App code is tested without faking database or HTTP connections")]),t._v(" "),e("p",[t._v("UI Test - Automated tests to test User Interface Interaction and Behavior")]),t._v(" "),e("div",{staticClass:"language-swift extra-class"},[e("pre",{pre:!0,attrs:{class:"language-swift"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// A simple struct containing a list of users.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UsersViewModel")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" users"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hasUsers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Bool")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("users"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isEmpty")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// A test case to validate our logic inside the `UsersViewModel`.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UsersViewModelTests")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("XCTestCase")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// It should correctly reflect whether it has users.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("testHasUsers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" viewModel "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("UsersViewModel")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("users"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Antoine"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Jaap"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Lady"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("XCTAssertTrue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("viewModel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hasUsers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"test-driven-development-life-cycle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#test-driven-development-life-cycle"}},[t._v("#")]),t._v(" Test-Driven Development Life Cycle")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Red: Write Unit test that fails")])]),t._v(" "),e("li",[e("p",[t._v("Green: Write App code to make Unit test pass")])]),t._v(" "),e("li",[e("p",[t._v("Refactor: Clean up and Imporve Unit test and app code")])]),t._v(" "),e("li",[e("p",[t._v("Repeat: Repeat these steps until all your app features are built and tested")])])]),t._v(" "),e("h2",{attrs:{id:"unit-test-best-practices"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unit-test-best-practices"}},[t._v("#")]),t._v(" Unit Test Best Practices")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Fast: Unit tests run fast")])]),t._v(" "),e("li",[e("p",[t._v("Independent: Unit tests are independent")])]),t._v(" "),e("li",[e("p",[t._v("Repeatable: Unit tests are repeatable")])]),t._v(" "),e("li",[e("p",[t._v("Self-Validating: Unit test validates itself")])]),t._v(" "),e("li",[e("p",[t._v("Thorough & Timely: Cover edge cases")])]),t._v(" "),e("li",[e("p",[t._v("We should not try to make our unit test test mulitple functions in the single unit test method.")])]),t._v(" "),e("li",[e("p",[t._v("Our test code is just as important as our application code")])]),t._v(" "),e("li",[e("p",[t._v("Although it’s a target for plenty, 100% coverage should not be your main goal when writing tests. Make sure to test at least your most important business logic at first as this is already a great start. Reaching 100% can be quite time consuming while the benefits are not always that big. In fact, it might take a lot of effort to even reach 100%.")])]),t._v(" "),e("li",[e("p",[t._v("Write a test before fixing a bug")])])]),t._v(" "),e("h2",{attrs:{id:"life-cycle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#life-cycle"}},[t._v("#")]),t._v(" Life Cycle")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("override class func setUp()")])]),t._v(" "),e("li",[e("p",[t._v("override func setUpWithError()")])]),t._v(" "),e("li",[e("p",[t._v("test methods\n(addTeardownBlock is called when test method ends)")])]),t._v(" "),e("li",[e("p",[t._v("override func tearDownWithError()")])]),t._v(" "),e("li",[e("p",[t._v("overrride class func tearDown()")])])]),t._v(" "),e("h2",{attrs:{id:"unit-test-method-requirements"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unit-test-method-requirements"}},[t._v("#")]),t._v(" Unit Test Method Requirements")]),t._v(" "),e("div",{staticClass:"language-swift extra-class"},[e("pre",{pre:!0,attrs:{class:"language-swift"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("testColorIsRed")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Some code here")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[t._v("Each test method must begin with the prefix test")]),t._v(" "),e("li",[t._v("Test method does not take arguments")]),t._v(" "),e("li",[t._v("Test method does not return a value")])]),t._v(" "),e("h3",{attrs:{id:"pattern"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pattern"}},[t._v("#")]),t._v(" Pattern")]),t._v(" "),e("div",{staticClass:"language-swift extra-class"},[e("pre",{pre:!0,attrs:{class:"language-swift"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" test"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("System")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Under")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Test")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("_")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Condition")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Or")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("State")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Change")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("_")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Expected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Result")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Some code here")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("div",{staticClass:"language-swift extra-class"},[e("pre",{pre:!0,attrs:{class:"language-swift"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("testSignupFormModel_WhenInformationProvided_passwordShouldMatchRepeatPassword")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Some code here")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"code-coverage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#code-coverage"}},[t._v("#")]),t._v(" Code Coverage")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/testing_with_xcode/chapters/07-code_coverage.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Apple Archive"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://zeddios.tistory.com/1141",target:"_blank",rel:"noopener noreferrer"}},[t._v("Zedd - Code Coverage"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-images.githubusercontent.com/50784573/115146351-194b4f00-a091-11eb-8726-0214aa081262.png",alt:"Screen Shot 2021-04-18 at 9 30 57 PM"}})]),t._v(" "),e("h2",{attrs:{id:"test-method-code-structure-arrange-act-assert"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#test-method-code-structure-arrange-act-assert"}},[t._v("#")]),t._v(" Test Method Code Structure; Arrange, Act, Assert")]),t._v(" "),e("div",{staticClass:"language-swift extra-class"},[e("pre",{pre:!0,attrs:{class:"language-swift"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("testSignupFormModel_WhenInformationProvided_PasswordsShouldMatch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Arrange")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" firstName "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ted"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" email "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test@test.com"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" password "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1234567"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sut "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("SignupFormModel")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("firstName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" firstName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" email"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" email"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" password"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" password"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Act ")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" passwordsMatch "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sut"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doPasswordsMatch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Assert")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("XCTAssertTrue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("passwordsMatch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Expected True value for \'passwordsMatch but apparently it is FALSE"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" file"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SignupFormModelTests.swift"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("36")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"assertions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#assertions"}},[t._v("#")]),t._v(" Assertions")]),t._v(" "),e("ul",[e("li",[e("p",[t._v('XCTAssertTrue(expression, "optional description") - Asserts that an expression is true')])]),t._v(" "),e("li",[e("p",[t._v('XCTAssertFalse(expression, "optional description") - Asserts that an expression is false')])]),t._v(" "),e("li",[e("p",[t._v('XCTAssertNil(expression, "optional description") - Asserts that an expression is nil')])]),t._v(" "),e("li",[e("p",[t._v('XCTAssertNotNil(expression, "optional description") - Asserts that an expression is not nil')])]),t._v(" "),e("li",[e("p",[t._v("XCTUnwrap - Asserts that an expression is not nil and returns the unwrapped value.")])]),t._v(" "),e("li",[e("p",[t._v('XCTAssertEqual(expression1, expression2, "optional description")')])]),t._v(" "),e("li",[e("p",[t._v('XCTAssertNotEqual(expression1, expression2, "optional description")')])]),t._v(" "),e("li",[e("p",[t._v('XCTAssertGreaterThan(expression1, expression2, "optional description")')])]),t._v(" "),e("li",[e("p",[t._v('XCTAssertLessThan(expression1, expression2, "optional description")')])]),t._v(" "),e("li",[e("p",[t._v('XCTAssertLessThanOrEqual(expression1, expression2, "optional description")')])]),t._v(" "),e("li",[e("p",[t._v('XCTAssertEqualWithAccuracy(expression1, expression2, accuracy, "optional description") - Asserts that two expressions have the same value within a certain accuracy.')])]),t._v(" "),e("li",[e("p",[t._v('XCTFail("optional description") - Generates a failure immediately and unconditionally.')])]),t._v(" "),e("li",[e("p",[t._v('XCTAssertThrowsError(expression, "optional description") - Asserts that an expression throws an error')])]),t._v(" "),e("li",[e("p",[t._v('XCTAssertNoThrow(expression, "optional description") - Asserts that an expression does not throw an error')])])]),t._v(" "),e("h2",{attrs:{id:"references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[t._v("#")]),t._v(" References")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.raywenderlich.com/21020457-ios-unit-testing-and-ui-testing-tutorial",target:"_blank",rel:"noopener noreferrer"}},[t._v("iOS Unit Testing and UI Testing Tutorial"),e("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);